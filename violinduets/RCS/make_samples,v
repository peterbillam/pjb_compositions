head	1.3;
access;
symbols;
locks
	pjb:1.3;
comment	@# @;


1.3
date	98.08.19.05.58.42;	author pjb;	state Exp;
branches;
next	1.2;

1.2
date	98.08.19.05.57.57;	author pjb;	state Exp;
branches;
next	1.1;

1.1
date	98.08.19.05.49.12;	author pjb;	state Exp;
branches;
next	;


desc
@perl script to make violinduet samplewss
@


1.3
log
@even less
@
text
@#! /usr/bin/perl
#########################################################################
#        This Perl script is Copyright (c) 1998, Peter J Billam         #
#     c/o P J B Computing, GPO Box 669, Hobart TAS 7001, Australia      #
#                                                                       #
# Permission is granted  to any individual or institution to use, copy, #
# modify or redistribute this software, so long as it is not resold for #
# profit,  and provided this notice is retained.   Neither Peter Billam #
# nor  P J B Computing  make any representations  about the suitability #
# of this software for any purpose. It is provided "as is", without any #
# express or implied warranty.                                          #
#      P J B Computing specialises in Internet Commerce, and offers Web #
# Functionality in Perl, HTML and Java.           http://www.pjb.com.au #
#########################################################################
unshift (@@INC, $ENV{PLIB} || '/home/plib');

$sd = '/home/pjb/www/mus/samples';
$message = 'Sample only.  Order these duets at www.pjb.com.au/mus !';

foreach $paper ('us', 'a4') {
   open (I, "score.$paper") || die "can't open score.$paper: $!\n";
   open (S, "> $sd/violinduets.$paper")
   || die "can't open $sd/violinduets.$paper: $!\n";

   while (<I>) {   # output first system of first duet ...
      last if /^% system 2 staves/;
      print S;
   }
   while (<I>) { if (/leftshow$/) { print S; last; } }
   while (<I>) { last if /^% system 2$/;   print S; }

   while (<I>) {   # skip to start of second duet ...
      last if /^%%Page: 3 3/;
   }
   print S "565 30 /Times-Italic 9 ($message) rightshow\n";
   print S "0 -260 translate\n";   # translate third of a page downwards
   while (<I>) {   # output first system of second duet ...
      last if /^% system 2 staves/;
      print S;
   }
   while (<I>) { if (/leftshow$/) { print S; last; } }
   while (<I>) { last if /^% system 2$/;   print S; }

   while (<I>) {   # skip to start of third duet ...
      last if /^%%Page: 5 5/;
   }
   print S "0 -260 translate\n";   # translate third of a page downwards
   while (<I>) {   # output first system of third duet ...
      last if /^% system 2 staves/;
      print S;
   }
   while (<I>) { if (/leftshow$/) { print S; last; } }

   while (<I>) {
      if (/^% system 2$/) {
         print S "pgsave restore\nshowpage\n";
         last;
      }
      print S;
   }
   close I; close S;
}
@


1.2
log
@less transkation between pieces
@
text
@d36 1
a36 1
   print S "0 -271 translate\n";   # translate third of a page downwards
d47 1
a47 1
   print S "0 -271 translate\n";   # translate third of a page downwards
@


1.1
log
@debug message placement in us version
@
text
@d36 1
a36 1
   print S "0 -281 translate\n";   # translate third of a page downwards
d47 1
a47 1
   print S "0 -281 translate\n";   # translate third of a page downwards
@
